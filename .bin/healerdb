#!/usr/bin/env /ptv/healer/healerdb-py/.venv/bin/python3
# -*- coding: utf-8 -*-
import os, sys, inspect
import mod_dbquery as dbquery
from rich.console import Console
from rich.markdown import Markdown
from rich.theme import Theme
from rich.emoji import Emoji
from absl import app
from absl import flags
from absl.testing import absltest
import fancyflags as ff
import mod_utils as myutils
from mod_utils import *

# Clear the terminal screen
clear()

# Set up rich
console = Console()

# Logo string
logo = """# HealerDB
## A CLI Tool to manage the database of Healer
### For Help, just run the command with the -h flag: `healerdb -h`
##### Made with :brain:  and :muscle:  by [Autherix](https://github.com/autherix)
###### By :handshake:  with: [Barbod](https://github.com/dark190)
"""

# print the logo
mdview(logo)

## Flags
FLAGS = flags.FLAGS
flags.DEFINE_string(name="host", default="localhost", help="The host of the database server")
flags.DEFINE_string(name="port", default="27017", help="The port of the database server")
flags.DEFINE_

# Required Flags

seperator()

# define connection string
connHostPort = "localhost:27017"
connUsername = "healerdb"
connSecret = "hamidpapi"
connstr = "mongodb://"+connUsername+":"+connSecret+"@"+connHostPort+"/"
print("Connecting to mongodb server on: \n" + str(connHostPort))
seperator()

# Create a client and ping the database
client, err = dbquery.CreateClient(connstr)
if err != None:
    print(parseError(err))

pingResult, err = dbquery.pingDB(client)
if err != None:
    print(parseError(err))
rprint("Ping result: " + str(pingResult))
seperator()

# 